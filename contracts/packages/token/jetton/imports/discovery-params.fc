;; moved to the separate file to keep hex of the previous codes unchanged

int op::provide_wallet_address() asm "0x2c76b973 PUSHINT";
int op::take_wallet_address() asm "0xd1735400 PUSHINT";
() __tact_debug(slice value) impure asm "STRDUMP" "DROP";


int is_resolvable(slice addr) inline {
    (int wc, _) = parse_std_addr(addr);

    return wc == workchain();
}

(cell) _send_wallet_address_reslove(slice sender_address, int query_id, slice owner_address, slice jetton_wallet_address) {
    cell included_address = begin_cell().store_slice(owner_address).end_cell();
    cell msg = begin_cell()
            .store_uint(0xd1735400, 32)
            .store_uint(query_id, 64)
            .store_slice(jetton_wallet_address)
            .store_maybe_ref(included_address)
            .end_cell();
    ;; send_raw_message(msg.store_maybe_ref(included_address).end_cell(), 64);
    return msg;
}

(cell) _send_wallet_address_true_unreslove(slice sender_address, int query_id, slice owner_address) {
    cell included_address = begin_cell().store_slice(owner_address).end_cell();

    cell msg = begin_cell()
            .store_uint(0xd1735400, 32)
            .store_uint(query_id, 64)
            .store_uint(0, 2) ;; addr_none
            .store_maybe_ref(included_address)
            .end_cell();
    ;; send_raw_message(msg.store_maybe_ref(included_address).end_cell(), 64);
    return msg;
}

(cell) _send_wallet_address_false_unreslove(slice sender_address, int query_id) {
    cell included_address = null();

    cell msg = begin_cell()
            .store_uint(0xd1735400, 32)
            .store_uint(query_id, 64)
            .store_uint(0, 2)
            .store_maybe_ref(included_address)
            .end_cell();
    ;; send_raw_message(msg.store_maybe_ref(included_address).end_cell(), 64);
    return msg;
}
