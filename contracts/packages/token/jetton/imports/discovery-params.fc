;; moved to the separate file to keep hex of the previous codes unchanged

int op::provide_wallet_address() asm "0x2c76b973 PUSHINT";
int op::take_wallet_address() asm "0xd1735400 PUSHINT";

int is_resolvable(slice addr) inline {
    (int wc, _) = parse_std_addr(addr);

    return wc == workchain();
}

() _send_wallet_address(slice sender_address, int query_id, slice owner_address, int include_address_flag, cell jetton_wallet_code) inline {
    cell included_address = include_address_flag
            ? begin_cell().store_slice(owner_address).end_cell()
            : null();

    var msg = begin_cell()
            .store_uint(0x18, 6)
            .store_slice(sender_address)
            .store_coins(0)
            .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
            .store_uint(op::take_wallet_address(), 32)
            .store_uint(query_id, 64);

    if (is_resolvable(owner_address)) {
        msg = msg.store_slice(calculate_user_jetton_wallet_address(owner_address, my_address(), jetton_wallet_code));
    } else {
        msg = msg.store_uint(0, 2); ;; addr_none
    }
    send_raw_message(msg.store_maybe_ref(included_address).end_cell(), 64);
}